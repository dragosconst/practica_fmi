@model practica_fmi.Models.CursViewModel
@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>
@using (Html.BeginForm("Edit", "Cursuri", FormMethod.Post, new { enctype = "multipart/form-data", runat = "server" }))
{
    @Html.HttpMethodOverride(HttpVerbs.Put)

    <br />
    @Html.HiddenFor(c => c.Curs.CursId)

    @Html.LabelFor(c => c.Curs.Denumire, "Denumire curs", new { htmlAttributes = new { @class = "form-control" } })
    @Html.EditorFor(c => c.Curs.Denumire)
    @Html.ValidationMessageFor(c => c.Curs.Denumire, null, new { @class = "text-danger" })
    <br />
    <label>Adaugă profesor</label>
    @Html.ListBoxFor(c => c.SelectedProfIds, Model.AllProfIds)
    @Html.ValidationMessageFor(c => c.SelectedProfIds, null, new { @class = "text-danger" })
    
    @*@Html.DropDownListFor(c => c.Profesors, new SelectList(ViewBag.profs, "Value", "Text"), "Selectați proful",
        new { @class = "form-control", @onchange = "javascript:addProfesor(this)", @id="dprof" })*@
    <br />
    <label>Adaugă student</label>
    @Html.ListBoxFor(c => c.SelectedStudentsIds, Model.AllStudentIds)
    @Html.ValidationMessageFor(c => c.SelectedStudentsIds, null, new { @class = "text-danger" })
    <br />

    @Html.LabelFor(c => c.Curs.Semestru, "Semestru", new { htmlAttributes = new { @class = "form-control" } })
    @Html.EditorFor(c => c.Curs.Semestru)
    @Html.ValidationMessageFor(c => c.Curs.Semestru, null, new { @class = "text-danger"})
    <br />
    <button type="submit" class="btn btn-success">Modifică</button>
}
